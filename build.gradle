buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.2.0"
group = "dk.mrspring" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ToggleBlocks"

minecraft {
    version = "1.7.10-10.13.4.1517-1.7.10"
    runDir = "eclipse"
}

repositories {
    maven {
        name "chickenbones"
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.118:dev"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar() {
    from(sourceSets.main.output, sourceSets.api.output)
}

task sourceJar(type: Jar) {
    from(sourceSets.main.java, sourceSets.api.java)
    classifier = "src"
}

task devJar(type: Jar) {
    from(sourceSets.main.output, sourceSets.api.output)
    classifier = "deobf"
}

task apiJar(type: Jar) {
    from(sourceSets.api.output)
    classifier = "api"
}

artifacts {
    archives sourceJar, devJar, apiJar
}

idea { module { inheritOutputDirs = true } }
